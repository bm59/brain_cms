!!com.aptana.scripting.model.BundleElement
author: Christopher Williams
children:
- !!com.aptana.scripting.model.MenuElement
  children:
  - children: &id001 []
    commandName: before
    customProperties: null
    displayName: before
    path: bundle.rb
    scope: null
  - children: *id001
    commandName: after
    customProperties: null
    displayName: after
    path: bundle.rb
    scope: null
  - children: *id001
    commandName: '-'
    customProperties: null
    displayName: '-'
    path: bundle.rb
    scope: null
  - children: *id001
    commandName: Run Single Example
    customProperties: null
    displayName: Run Single Example
    path: bundle.rb
    scope: null
  - children: *id001
    commandName: Run Examples
    customProperties: null
    displayName: Run Examples
    path: bundle.rb
    scope: null
  - children: *id001
    commandName: Run Examples in selected files/directories
    customProperties: null
    displayName: Run Examples in selected files/directories
    path: bundle.rb
    scope: null
  - children: *id001
    commandName: '-'
    customProperties: null
    displayName: '-'
    path: bundle.rb
    scope: null
  - children:
    - children:
      - children: *id001
        commandName: should be
        customProperties: null
        displayName: should be
        path: bundle.rb
        scope: null
      - children: *id001
        commandName: should_not be
        customProperties: null
        displayName: should_not be
        path: bundle.rb
        scope: null
      - children: *id001
        commandName: '-'
        customProperties: null
        displayName: '-'
        path: bundle.rb
        scope: null
      - children: *id001
        commandName: should equal
        customProperties: null
        displayName: should equal
        path: bundle.rb
        scope: null
      - children: *id001
        commandName: should_not equal
        customProperties: null
        displayName: should_not equal
        path: bundle.rb
        scope: null
      - children: *id001
        commandName: '-'
        customProperties: null
        displayName: '-'
        path: bundle.rb
        scope: null
      - children: *id001
        commandName: should satisfy
        customProperties: null
        displayName: should satisfy
        path: bundle.rb
        scope: null
      - children: *id001
        commandName: should_not satisfy
        customProperties: null
        displayName: should_not satisfy
        path: bundle.rb
        scope: null
      - children: *id001
        commandName: '-'
        customProperties: null
        displayName: '-'
        path: bundle.rb
        scope: null
      - children: *id001
        commandName: should be_close
        customProperties: null
        displayName: should be_close
        path: bundle.rb
        scope: null
      - children: *id001
        commandName: should_not be_close
        customProperties: null
        displayName: should_not be_close
        path: bundle.rb
        scope: null
      - children: *id001
        commandName: '-'
        customProperties: null
        displayName: '-'
        path: bundle.rb
        scope: null
      - children: *id001
        commandName: should match
        customProperties: null
        displayName: should match
        path: bundle.rb
        scope: null
      - children: *id001
        commandName: should_not match
        customProperties: null
        displayName: should_not match
        path: bundle.rb
        scope: null
      - children: *id001
        commandName: '-'
        customProperties: null
        displayName: '-'
        path: bundle.rb
        scope: null
      - children: *id001
        commandName: should predicate
        customProperties: null
        displayName: should predicate
        path: bundle.rb
        scope: null
      commandName: General
      customProperties: null
      displayName: General
      path: bundle.rb
      scope: null
    - children:
      - children: *id001
        commandName: should be_instance_of
        customProperties: null
        displayName: should be_instance_of
        path: bundle.rb
        scope: null
      - children: *id001
        commandName: should_not be_instance_of
        customProperties: null
        displayName: should_not be_instance_of
        path: bundle.rb
        scope: null
      - children: *id001
        commandName: '-'
        customProperties: null
        displayName: '-'
        path: bundle.rb
        scope: null
      - children: *id001
        commandName: should be_kind_of
        customProperties: null
        displayName: should be_kind_of
        path: bundle.rb
        scope: null
      - children: *id001
        commandName: should_not be_kind_of
        customProperties: null
        displayName: should_not be_kind_of
        path: bundle.rb
        scope: null
      - children: *id001
        commandName: '-'
        customProperties: null
        displayName: '-'
        path: bundle.rb
        scope: null
      - children: *id001
        commandName: should respond_to
        customProperties: null
        displayName: should respond_to
        path: bundle.rb
        scope: null
      - children: *id001
        commandName: should_not respond_to
        customProperties: null
        displayName: should_not respond_to
        path: bundle.rb
        scope: null
      commandName: Class/Type
      customProperties: null
      displayName: Class/Type
      path: bundle.rb
      scope: null
    - children:
      - children: *id001
        commandName: should raise_error
        customProperties: null
        displayName: should raise_error
        path: bundle.rb
        scope: null
      - children: *id001
        commandName: should_not raise_error
        customProperties: null
        displayName: should_not raise_error
        path: bundle.rb
        scope: null
      - children: *id001
        commandName: '-'
        customProperties: null
        displayName: '-'
        path: bundle.rb
        scope: null
      - children: *id001
        commandName: should throw
        customProperties: null
        displayName: should throw
        path: bundle.rb
        scope: null
      - children: *id001
        commandName: should_not throw
        customProperties: null
        displayName: should_not throw
        path: bundle.rb
        scope: null
      commandName: Procs
      customProperties: null
      displayName: Procs
      path: bundle.rb
      scope: null
    - children:
      - children: *id001
        commandName: '-'
        customProperties: null
        displayName: '-'
        path: bundle.rb
        scope: null
      - children: *id001
        commandName: should have
        customProperties: null
        displayName: should have
        path: bundle.rb
        scope: null
      - children: *id001
        commandName: should have_at_least
        customProperties: null
        displayName: should have_at_least
        path: bundle.rb
        scope: null
      - children: *id001
        commandName: should have_at_most
        customProperties: null
        displayName: should have_at_most
        path: bundle.rb
        scope: null
      commandName: Collections
      customProperties: null
      displayName: Collections
      path: bundle.rb
      scope: null
    commandName: Expectations
    customProperties: null
    displayName: Expectations
    path: bundle.rb
    scope: null
  - children:
    - children: *id001
      commandName: mock
      customProperties: null
      displayName: mock
      path: bundle.rb
      scope: null
    - children: *id001
      commandName: '-'
      customProperties: null
      displayName: '-'
      path: bundle.rb
      scope: null
    - children:
      - children: *id001
        commandName: should_receive
        customProperties: null
        displayName: should_receive
        path: bundle.rb
        scope: null
      - children: *id001
        commandName: should_not_receive
        customProperties: null
        displayName: should_not_receive
        path: bundle.rb
        scope: null
      - children: *id001
        commandName: with args
        customProperties: null
        displayName: with args
        path: bundle.rb
        scope: null
      commandName: Expectations
      customProperties: null
      displayName: Expectations
      path: bundle.rb
      scope: null
    - children:
      - children: *id001
        commandName: once
        customProperties: null
        displayName: once
        path: bundle.rb
        scope: null
      - children: *id001
        commandName: twice
        customProperties: null
        displayName: twice
        path: bundle.rb
        scope: null
      - children: *id001
        commandName: exactly
        customProperties: null
        displayName: exactly
        path: bundle.rb
        scope: null
      - children: *id001
        commandName: '-'
        customProperties: null
        displayName: '-'
        path: bundle.rb
        scope: null
      - children: *id001
        commandName: at_least
        customProperties: null
        displayName: at_least
        path: bundle.rb
        scope: null
      - children: *id001
        commandName: '-'
        customProperties: null
        displayName: '-'
        path: bundle.rb
        scope: null
      - children: *id001
        commandName: at_most
        customProperties: null
        displayName: at_most
        path: bundle.rb
        scope: null
      - children: *id001
        commandName: any_number_of_times
        customProperties: null
        displayName: any_number_of_times
        path: bundle.rb
        scope: null
      commandName: Receive Counts
      customProperties: null
      displayName: Receive Counts
      path: bundle.rb
      scope: null
    - children:
      - children: *id001
        commandName: and_return with args
        customProperties: null
        displayName: and_return with args
        path: bundle.rb
        scope: null
      - children: *id001
        commandName: and_return with block
        customProperties: null
        displayName: and_return with block
        path: bundle.rb
        scope: null
      - children: *id001
        commandName: and_raise
        customProperties: null
        displayName: and_raise
        path: bundle.rb
        scope: null
      - children: *id001
        commandName: and_throw
        customProperties: null
        displayName: and_throw
        path: bundle.rb
        scope: null
      - children: *id001
        commandName: and_yield
        customProperties: null
        displayName: and_yield
        path: bundle.rb
        scope: null
      commandName: Responses
      customProperties: null
      displayName: Responses
      path: bundle.rb
      scope: null
    commandName: Mocks
    customProperties: null
    displayName: Mocks
    path: bundle.rb
    scope: null
  - children: *id001
    commandName: '-'
    customProperties: null
    displayName: '-'
    path: bundle.rb
    scope: null
  - children:
    - children: *id001
      commandName: Require spec_helper
      customProperties: null
      displayName: Require spec_helper
      path: bundle.rb
      scope: null
    - children: *id001
      commandName: '-'
      customProperties: null
      displayName: '-'
      path: bundle.rb
      scope: null
    - children: *id001
      commandName: controller_name
      customProperties: null
      displayName: controller_name
      path: bundle.rb
      scope: null
    - children: *id001
      commandName: describe (Controller)
      customProperties: null
      displayName: describe (Controller)
      path: bundle.rb
      scope: null
    - children: *id001
      commandName: describe (RESTful Controller)
      customProperties: null
      displayName: describe (RESTful Controller)
      path: bundle.rb
      scope: null
    - children: *id001
      commandName: '-'
      customProperties: null
      displayName: '-'
      path: bundle.rb
      scope: null
    - children:
      - children: *id001
        commandName: should have_records
        customProperties: null
        displayName: should have_records
        path: bundle.rb
        scope: null
      - children: *id001
        commandName: '-'
        customProperties: null
        displayName: '-'
        path: bundle.rb
        scope: null
      - children: *id001
        commandName: should be_success
        customProperties: null
        displayName: should be_success
        path: bundle.rb
        scope: null
      - children: *id001
        commandName: should_not be_success
        customProperties: null
        displayName: should_not be_success
        path: bundle.rb
        scope: null
      - children: *id001
        commandName: '-'
        customProperties: null
        displayName: '-'
        path: bundle.rb
        scope: null
      - children: *id001
        commandName: should be_redirect
        customProperties: null
        displayName: should be_redirect
        path: bundle.rb
        scope: null
      - children: *id001
        commandName: should_not be_redirect
        customProperties: null
        displayName: should_not be_redirect
        path: bundle.rb
        scope: null
      - children: *id001
        commandName: should redirect_to
        customProperties: null
        displayName: should redirect_to
        path: bundle.rb
        scope: null
      - children: *id001
        commandName: '-'
        customProperties: null
        displayName: '-'
        path: bundle.rb
        scope: null
      - children: *id001
        commandName: should render_template
        customProperties: null
        displayName: should render_template
        path: bundle.rb
        scope: null
      commandName: Expectations
      customProperties: null
      displayName: Expectations
      path: bundle.rb
      scope: null
    commandName: Rails Integration
    customProperties: null
    displayName: Rails Integration
    path: bundle.rb
    scope: null
  - children: *id001
    commandName: configure
    customProperties: null
    displayName: configure
    path: bundle.rb
    scope: null
  - children: *id001
    commandName: describe (String)
    customProperties: null
    displayName: describe (String)
    path: bundle.rb
    scope: null
  - children: *id001
    commandName: describe (type)
    customProperties: null
    displayName: describe (type)
    path: bundle.rb
    scope: null
  - children: *id001
    commandName: describe (type, string)
    customProperties: null
    displayName: describe (type, string)
    path: bundle.rb
    scope: null
  - children: *id001
    commandName: context
    customProperties: null
    displayName: context
    path: bundle.rb
    scope: null
  - children: *id001
    commandName: it (does something)
    customProperties: null
    displayName: it (does something)
    path: bundle.rb
    scope: null
  - children: *id001
    commandName: it (should do something)
    customProperties: null
    displayName: it (should do something)
    path: bundle.rb
    scope: null
  - children: *id001
    commandName: Matcher (DSL)
    customProperties: null
    displayName: Matcher (DSL)
    path: bundle.rb
    scope: null
  - children: *id001
    commandName: Matcher (Custom)
    customProperties: null
    displayName: Matcher (Custom)
    path: bundle.rb
    scope: null
  - children: *id001
    commandName: mock_with
    customProperties: null
    displayName: mock_with
    path: bundle.rb
    scope: null
  - children: *id001
    commandName: should ==
    customProperties: null
    displayName: should ==
    path: bundle.rb
    scope: null
  - children: *id001
    commandName: should_not ==
    customProperties: null
    displayName: should_not ==
    path: bundle.rb
    scope: null
  - children: *id001
    commandName: should eql
    customProperties: null
    displayName: should eql
    path: bundle.rb
    scope: null
  - children: *id001
    commandName: should_not eql
    customProperties: null
    displayName: should_not eql
    path: bundle.rb
    scope: null
  - children: *id001
    commandName: should =~
    customProperties: null
    displayName: should =~
    path: bundle.rb
    scope: null
  - children: *id001
    commandName: should_not predicate
    customProperties: null
    displayName: should_not predicate
    path: bundle.rb
    scope: null
  - children: *id001
    commandName: mock_model
    customProperties: null
    displayName: mock_model
    path: bundle.rb
    scope: null
  - children: *id001
    commandName: stub
    customProperties: null
    displayName: stub
    path: bundle.rb
    scope: null
  - children: *id001
    commandName: Save Example file and remember
    customProperties: null
    displayName: Save Example file and remember
    path: bundle.rb
    scope: null
  - children: *id001
    commandName: Run Last Examples file
    customProperties: null
    displayName: Run Last Examples file
    path: bundle.rb
    scope: null
  - children: *id001
    commandName: Alternate File
    customProperties: null
    displayName: Alternate File
    path: bundle.rb
    scope: null
  commandName: RSpec
  customProperties: null
  displayName: RSpec
  path: bundle.rb
  scope: null
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties: null
  displayName: Alternate File
  input: [none]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': [CONTROL+M2+ARROW_DOWN]
  outputPath: null
  outputType: show_as_tooltip
  path: commands\alternate_file.rb
  runType: current_thread
  scope: source.ruby, text.html.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties: null
  displayName: Run Single Example
  input: [selection, line]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': [M1+M2+R]
  outputPath: null
  outputType: show_as_html
  path: commands\run_focussed_specification.rb
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties: null
  displayName: Run Last Examples file
  input: [none, document]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': [OPTION+COMMAND+R]
  outputPath: null
  outputType: show_as_html
  path: commands\run_last_examples_file.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties: null
  displayName: Run Examples
  input: [document, document]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': [M1+R]
  outputPath: null
  outputType: undefined
  path: commands\run_specifications_-_normal.rb
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties: null
  displayName: Run Examples in selected files/directories
  input: [none]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': [OPTION+COMMAND+R]
  outputPath: null
  outputType: show_as_html
  path: commands\run_specifications_in_selected_files_or_directories.rb
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties:
    execution_listener_values: [org.eclipse.ui.file.save]
  displayName: Save Example file and remember
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: undefined
  path: commands\save_spec_and_remember.rb
  runType: current_thread
  scope: source.ruby.rspec
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [anr]
  description: null
  displayName: and_raise
  expansion: and_raise(${1:exception})
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [anrb]
  description: null
  displayName: and_return with block
  expansion: and_return { $1 }
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [andra]
  description: null
  displayName: and_return with args
  expansion: and_return(${1:value})
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [ant]
  description: null
  displayName: and_throw
  expansion: and_throw(${1:sym})
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [any]
  description: null
  displayName: and_yield
  expansion: and_yield(${1:values})
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [annot]
  description: null
  displayName: any_number_of_times
  expansion: any_number_of_times
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [atl]
  description: null
  displayName: at_least
  expansion: at_least(${1:n}).times
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [atm]
  description: null
  displayName: at_most
  expansion: at_most(${1:n}).times
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [cnf]
  description: null
  displayName: configure
  expansion: "Spec::Runner.configure do |config|\n  config.$0\nend"
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [con]
  description: null
  displayName: context
  expansion: "context \"${1:context}\" do\n  $0\nend"
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [desc]
  description: null
  displayName: describe (Controller)
  expansion: "require File.expand_path(File.dirname(__FILE__) + '/../spec_helper')\n\
    \ndescribe ${1:controller} do\n  $0\nend"
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [desrc]
  description: null
  displayName: describe (RESTful Controller)
  expansion: "describe ${1:controller}, \"${2:GET|POST|PUT|DELETE} ${3:/some/path}${4:\
    \ with some parameters}\" do\n  $0\nend"
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [des]
  description: null
  displayName: describe (String)
  expansion: "describe \"${1:subject}\" do\n  $0\nend"
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [dest]
  description: null
  displayName: describe (type)
  expansion: "describe ${1:Type} do\n  $0\nend"
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [dests]
  description: null
  displayName: describe (type, string)
  expansion: "describe ${1:Type}, \"${2:description}\" do\n  $0\nend"
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [ex]
  description: null
  displayName: exactly
  expansion: exactly(${1:n}).times
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [its]
  description: null
  displayName: it (should do something)
  expansion: "it \"should ${1:do something}\"${2: do\n  $0\nend}"
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [it]
  description: null
  displayName: it (does something)
  expansion: "it \"${1:does something}\"${2: do\n  $0\nend}"
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [matc]
  description: null
  displayName: Matcher (Custom)
  expansion: "class ${1:ReverseTo}\n  def initialize($3)\n    @$3 = $3\n  end\n\n\
    \  def matches?(actual)\n    @actual = actual\n    # Satisfy expectation here.\
    \ Return false or raise an error if it's not met.\n    ${0:@actual.reverse.should\
    \ == @$3}\n    true\n  end\n\n  def failure_message_for_should\n    \"expected\
    \ #{@actual.inspect} to $2 #{@$3.inspect}, but it didn't\"\n  end\n\n  def failure_message_for_should_not\n\
    \    \"expected #{@actual.inspect} not to $2 #{@$3.inspect}, but it did\"\n  end\n\
    end\n\ndef ${2:reverse_to}(${3:expected})\n  $1.new($3)\nend"
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [mat]
  description: null
  displayName: Matcher (DSL)
  expansion: "Spec::Matchers.define :${1:name} do |${2:expected}|\n  match do |${3:actual}|\n\
    \    $3.$1?($2)\n  end\nend\n"
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [moc]
  description: null
  displayName: mock
  expansion: '${1:var} = mock("${2:mock_name}"${3:, :null_object => true})

    $0'
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [mm]
  description: null
  displayName: mock_model
  expansion: mock_model(${1:model})$0
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [mocw]
  description: null
  displayName: mock_with
  expansion: "Spec::Runner.configure do |config|\n\tconfig.mock_with :${0:mocha|flexmock|rr}\n\
    end"
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: ['on']
  description: null
  displayName: once
  expansion: once
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [reqs]
  description: null
  displayName: Require spec_helper
  expansion: 'require ''spec_helper''


    '
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [shbs]
  description: null
  displayName: should be_success
  expansion: 'response.should be_success

    $0'
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [shnbs]
  description: null
  displayName: should_not be_success
  expansion: 'response.should_not be_success

    $0'
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [conn]
  description: null
  displayName: controller_name
  expansion: controller_name :${1:controller}
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [bef]
  description: null
  displayName: before
  expansion: "before(${1::each}) do\n  $0\nend"
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [sh=]
  description: null
  displayName: should ==
  expansion: '${1:target}.should == ${2:value}

    $0'
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [shm]
  description: null
  displayName: should =~
  expansion: '${1:target}.should =~ /${2:regexp}/

    $0'
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [she]
  description: null
  displayName: should eql
  expansion: '${1:target}.should eql(${2:value})

    $0'
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [shb]
  description: null
  displayName: should be
  expansion: '${1:target}.should be(${2:result})

    $0'
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [shbko]
  description: null
  displayName: should be_kind_of
  expansion: '${1:target}.should be_a_kind_of(${2:klass})

    $0'
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [shbio]
  description: null
  displayName: should be_instance_of
  expansion: '${1:target}.should be_instance_of(${2:klass})

    $0'
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [shbc]
  description: null
  displayName: should be_close
  expansion: '${1:target}.should be_close(${2:result}, ${3:tolerance})

    $0'
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [shbr]
  description: null
  displayName: should be_redirect
  expansion: 'response.should be_redirect

    $0'
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [she]
  description: null
  displayName: should equal
  expansion: '${1:target}.should equal(${2:value})

    $0'
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [shh]
  description: null
  displayName: should have
  expansion: '${1:target}.should have(${2:num}).${3:things}

    $0'
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [shhal]
  description: null
  displayName: should have_at_least
  expansion: '${1:target}.should have_at_least(${2:num}).${3:things}

    $0'
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [shham]
  description: null
  displayName: should have_at_most
  expansion: '${1:target}.should have_at_most(${2:num}).${3:things}

    $0'
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [shhr]
  description: null
  displayName: should have_records
  expansion: '${1:target}.should have(${2:x}).records

    $0'
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [shm]
  description: null
  displayName: should match
  expansion: '${1:target}.should match(/${2:regexp}/)

    $0'
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [shn=]
  description: null
  displayName: should_not ==
  expansion: '${1:target}.should_not == ${2:value}

    $0'
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [shnm]
  description: null
  displayName: should_not =~
  expansion: '${1:target}.should_not =~ /${2:regexp}/

    $0'
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [shne]
  description: null
  displayName: should_not eql
  expansion: '${1:target}.should_not eql(${2:value})

    $0'
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [shnb]
  description: null
  displayName: should_not be
  expansion: '${1:target}.should_not be(${2:result})

    $0'
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [shkof]
  description: null
  displayName: should_not be_kind_of
  expansion: '${1:target}.should_not be_a_kind_of(${2:klass})

    $0'
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [shbio]
  description: null
  displayName: should_not be_instance_of
  expansion: '${1:target}.should_not be_instance_of(${2:klass})

    $0'
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [shnbc]
  description: null
  displayName: should_not be_close
  expansion: '${1:target}.should_not be_close(${2:result}, ${3:tolerance})

    $0'
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [shnbr]
  description: null
  displayName: should_not be_redirect
  expansion: 'response.should_not be_redirect

    $0'
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [shne]
  description: null
  displayName: should_not equal
  expansion: '${1:target}.should_not equal(${2:value})

    $0'
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [shnm]
  description: null
  displayName: should_not match
  expansion: '${1:target}.should_not match(/${2:regexp}/)

    $0'
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [shnp]
  description: null
  displayName: should_not predicate
  expansion: '${1:target}.should_not ${2:be_${3:predicate}} $4

    $0'
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [shnre]
  description: null
  displayName: should_not raise_error
  expansion: 'lambda { $1 }.should_not raise_error(${2:error})

    $0'
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [shnr]
  description: null
  displayName: should_not_receive
  expansion: '${1:mock}.should_not_receive(:${2:message})$3

    $0

    '
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [shnrt]
  description: null
  displayName: should_not respond_to
  expansion: '${1:target}.should_not respond_to(:${2:sym})

    $0'
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [shns]
  description: null
  displayName: should_not satisfy
  expansion: '${1:target}.should_not satisfy { |obj| $2 }

    $0'
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [shnt]
  description: null
  displayName: should_not throw
  expansion: 'lambda { $1 }.should_not throw_symbol(:${2:symbol})

    $0'
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [shp]
  description: null
  displayName: should predicate
  expansion: '${1:target}.should ${2:be_${3:predicate}} $4

    $0'
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [shre]
  description: null
  displayName: should raise_error
  expansion: 'lambda { $1 }.should raise_error(${2:error})

    $0'
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [shr]
  description: null
  displayName: should_receive
  expansion: ${1:mock}.should_receive(:${2:message})$3
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [wia]
  description: null
  displayName: with args
  expansion: with(${1})$2
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [shrt]
  description: null
  displayName: should redirect_to
  expansion: 'response.should redirect_to(${1:url})

    $0'
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [shrt]
  description: null
  displayName: should render_template
  expansion: 'response.should render_template(:${1:template})

    $0'
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [shrt]
  description: null
  displayName: should respond_to
  expansion: '${1:target}.should respond_to(:${2:sym})

    $0'
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [shs]
  description: null
  displayName: should satisfy
  expansion: '${1:target}.should satisfy { |obj| $2 }

    $0'
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [sht]
  description: null
  displayName: should throw
  expansion: 'lambda { $1 }.should throw_symbol(:${2:symbol})

    $0'
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [stu]
  description: null
  displayName: stub
  expansion: ${1:double}.stub(:${2:message})$3
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [aft]
  description: null
  displayName: after
  expansion: "after(${1::each}) do\n  $0\nend"
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  category: null
  customProperties:
    prefix_values: [tw]
  description: null
  displayName: twice
  expansion: twice
  iconPath: null
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets\snippets.rb
  runType: current_thread
  scope: source.ruby.rspec
  tags: *id001
  workingDirectoryType: UNDEFINED
copyright: Copyright 2010 Aptana Inc. Distributed under the MIT license.
customProperties: null
decreaseIndentMarkers: &id002 {}
description: Ported from David Chelimsky's RSpec bundle for TextMate.
displayName: RSpec
fileTypeRegistry: {'*spec.rb': source.ruby.rspec}
fileTypes: ['*spec.rb']
foldingStartMarkers: *id002
foldingStopMarkers: *id002
increaseIndentMarkers: *id002
license: null
licenseUrl: null
path: bundle.rb
repository: git://github.com/aptana/rspec.ruble.git
visible: true
