--- !!com.aptana.scripting.model.BundleElement 
author: Christopher Williams, Andrew Shebanow
children: 
- !!com.aptana.scripting.model.MenuElement 
  children: 
  - !!com.aptana.scripting.model.MenuElement 
    commandName: "Show Scope"
    displayName: "Show Scope"
    path: bundle.rb
  - !!com.aptana.scripting.model.MenuElement 
    commandName: "Copy Scope"
    displayName: "Copy Scope"
    path: bundle.rb
  - !!com.aptana.scripting.model.MenuElement 
    commandName: "Show Scope and Matching Theme Rule"
    displayName: "Show Scope and Matching Theme Rule"
    path: bundle.rb
  - !!com.aptana.scripting.model.MenuElement 
    commandName: "-"
    displayName: "-"
    path: bundle.rb
  - !!com.aptana.scripting.model.MenuElement 
    commandName: "Show ENV"
    displayName: "Show ENV"
    path: bundle.rb
  - !!com.aptana.scripting.model.MenuElement 
    commandName: "-"
    displayName: "-"
    path: bundle.rb
  - !!com.aptana.scripting.model.MenuElement 
    commandName: "Install Bundle"
    displayName: "Install Bundle"
    path: bundle.rb
  - !!com.aptana.scripting.model.MenuElement 
    commandName: "Update User Bundles"
    displayName: "Update User Bundles"
    path: bundle.rb
  - !!com.aptana.scripting.model.MenuElement 
    commandName: "Flush Bundle Caches"
    displayName: "Flush Bundle Caches"
    path: bundle.rb
  - !!com.aptana.scripting.model.MenuElement 
    commandName: "-"
    displayName: "-"
    path: bundle.rb
  - !!com.aptana.scripting.model.MenuElement 
    commandName: "Show Command Bindings"
    displayName: "Show Command Bindings"
    path: bundle.rb
  - !!com.aptana.scripting.model.MenuElement 
    commandName: "Show Active Commands in Scope"
    displayName: "Show Active Commands in Scope"
    path: bundle.rb
  - !!com.aptana.scripting.model.MenuElement 
    commandName: "Show Active Snippets in Scope"
    displayName: "Show Active Snippets in Scope"
    path: bundle.rb
  - !!com.aptana.scripting.model.MenuElement 
    commandName: "-"
    displayName: "-"
    path: bundle.rb
  - !!com.aptana.scripting.model.MenuElement 
    children: 
    - !!com.aptana.scripting.model.MenuElement 
      commandName: "Bundle.rb"
      displayName: "Bundle.rb"
      path: bundle.rb
    - !!com.aptana.scripting.model.MenuElement 
      commandName: "-"
      displayName: "-"
      path: bundle.rb
    - !!com.aptana.scripting.model.MenuElement 
      commandName: "Menu Command"
      displayName: "Menu Command"
      path: bundle.rb
    - !!com.aptana.scripting.model.MenuElement 
      commandName: "Menu Separator"
      displayName: "Menu Separator"
      path: bundle.rb
    - !!com.aptana.scripting.model.MenuElement 
      commandName: "Menu Block"
      displayName: "Menu Block"
      path: bundle.rb
    - !!com.aptana.scripting.model.MenuElement 
      commandName: "-"
      displayName: "-"
      path: bundle.rb
    - !!com.aptana.scripting.model.MenuElement 
      commandName: "Command"
      displayName: "Command"
      path: bundle.rb
    - !!com.aptana.scripting.model.MenuElement 
      commandName: "Snippet"
      displayName: "Snippet"
      path: bundle.rb
    - !!com.aptana.scripting.model.MenuElement 
      commandName: "-"
      displayName: "-"
      path: bundle.rb
    - !!com.aptana.scripting.model.MenuElement 
      commandName: "Content Assist Block"
      displayName: "Content Assist Block"
      path: bundle.rb
    - !!com.aptana.scripting.model.MenuElement 
      commandName: "With Defaults Block"
      displayName: "With Defaults Block"
      path: bundle.rb
    - !!com.aptana.scripting.model.MenuElement 
      commandName: "Environment"
      displayName: "Environment"
      path: bundle.rb
    - !!com.aptana.scripting.model.MenuElement 
      commandName: "Smart Typing Pairs Definition"
      displayName: "Smart Typing Pairs Definition"
      path: bundle.rb
    - !!com.aptana.scripting.model.MenuElement 
      commandName: "-"
      displayName: "-"
      path: bundle.rb
    - !!com.aptana.scripting.model.MenuElement 
      commandName: "File Template"
      displayName: "File Template"
      path: bundle.rb
    - !!com.aptana.scripting.model.MenuElement 
      commandName: "Project Template"
      displayName: "Project Template"
      path: bundle.rb
    displayName: "Insert Bundle Section"
    path: bundle.rb
  - !!com.aptana.scripting.model.MenuElement 
    commandName: "-"
    displayName: "-"
    path: bundle.rb
  - !!com.aptana.scripting.model.MenuElement 
    commandName: "Validate Snippets"
    displayName: "Validate Snippets"
    path: bundle.rb
  - !!com.aptana.scripting.model.MenuElement 
    commandName: "Convert TextMate Bundle"
    displayName: "Convert TextMate Bundle"
    path: bundle.rb
  displayName: "Bundle Development"
  path: bundle.rb
- !command 
  async: false
  displayName: "Copy Scope"
  input: 
  - none
  keyBindingMap: 
    ? !!com.aptana.scripting.model.Platform ALL
    : 
      - CONTROL+SHIFT+COMMAND+C

  outputType: copy_to_clipboard
  path: commands/copy_scope.rb
  runType: current_thread
  workingDirectoryType: UNDEFINED
- !command 
  async: false
  displayName: "Show ENV"
  input: 
  - none
  keyBindingMap: 
    ? !!com.aptana.scripting.model.Platform ALL
    : 
      - CONTROL+SHIFT+E

  outputType: show_as_tooltip
  path: commands/env.rb
  runType: current_thread
  workingDirectoryType: UNDEFINED
- !command 
  async: false
  displayName: "Show Scope and Matching Theme Rule"
  input: 
  - none
  keyBindingMap: 
    ? !!com.aptana.scripting.model.Platform ALL
    : 
      - M1+M3+P

  outputType: show_as_tooltip
  path: commands/show_theme.rb
  runType: current_thread
  workingDirectoryType: UNDEFINED
- !command 
  async: false
  displayName: "Validate Snippets"
  input: 
  - none
  outputType: create_new_document
  path: commands/validate_snippets.rb
  runType: current_thread
  workingDirectoryType: UNDEFINED
- !command 
  async: false
  displayName: "Show Active Snippets in Scope"
  input: 
  - none
  outputType: create_new_document
  path: commands/active_scope_snippets.rb
  runType: current_thread
  scope: all
  workingDirectoryType: UNDEFINED
- !command 
  async: false
  displayName: "Show Active Commands in Scope"
  input: 
  - none
  outputType: create_new_document
  path: commands/active_scope_commands.rb
  runType: current_thread
  scope: all
  workingDirectoryType: UNDEFINED
- !command 
  async: false
  displayName: "Show Command Bindings"
  input: 
  - none
  outputType: create_new_document
  path: commands/command_bindings.rb
  runType: current_thread
  scope: all
  workingDirectoryType: UNDEFINED
- !command 
  async: false
  displayName: "Install Bundle"
  input: 
  - none
  outputType: none
  path: commands/install_bundle.rb
  runType: current_thread
  workingDirectoryType: UNDEFINED
- !command 
  async: false
  displayName: "Flush Bundle Caches"
  input: 
  - none
  outputType: show_as_tooltip
  path: commands/flush_cache.rb
  runType: current_thread
  workingDirectoryType: UNDEFINED
- !command 
  async: false
  displayName: "Update User Bundles"
  input: 
  - none
  outputType: discard
  path: commands/update.rb
  runType: current_thread
  workingDirectoryType: UNDEFINED
- !command 
  async: false
  displayName: "Convert TextMate Bundle"
  input: 
  - none
  outputType: show_as_tooltip
  path: commands/convert_bundle.rb
  runType: current_thread
  workingDirectoryType: UNDEFINED
- !command 
  async: false
  displayName: "Show Scope"
  input: 
  - none
  keyBindingMap: 
    ? !!com.aptana.scripting.model.Platform ALL
    : 
      - CONTROL+SHIFT+P

  outputType: show_as_tooltip
  path: commands/show_scope.rb
  runType: current_thread
  workingDirectoryType: UNDEFINED
- !command 
  async: false
  customProperties: 
    prefix_values: 
    - bu
  displayName: "Bundle.rb"
  input: 
  - none
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - sn
  displayName: "Snippet"
  expansion: |-
    snippet '${1:name}' do |s|
      s.trigger = '${2:trigger}'
      s.scope = '${3:source.ruby}'
      s.expansion = "${4:example}"
    end
  input: 
  - none
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - m.
  displayName: "Menu Command"
  expansion: |-
    m.command '${1:command_or_snippet_name}'
    m.$0
  input: 
  - none
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - m.
  displayName: "Menu Separator"
  expansion: |-
    m.separator
    m.$0
  input: 
  - none
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - m.
  displayName: "Menu Block"
  expansion: |-
    m.menu '${1:submenu}' do |m|
      m.$0
    end
  input: 
  - none
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - co
  displayName: "Command"
  expansion: |-
    require 'ruble'
    
    command '${1:name}' do |cmd|
      cmd.input = :${2:none/document/selection/word/right_character/left_character/line/clipboard/selected_lines}
      cmd.output = :${3:discard/show_as_tooltip/replace_selection/replace_line/replace_word/show_as_html/insert_as_text/insert_as_snippet/create_new_document}
      cmd.key_binding = '${4:CONTROL+SHIFT+E}'
      cmd.scope = '${5:source.ruby}'
      cmd.invoke do |context|
        # Write your ruby code here. If there's a non-nil return value for the block that will be used as output/result value.
        # Otherwise we'll take what was piped to STDOUT
        nil
      end
    end
  input: 
  - none
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - ca
  displayName: "Content Assist Block"
  expansion: |-
    require 'ruble'
    
    content_assist '${1:name}' do |ca|
      ca.scope = '${2:source.ruby}'
      ca.invoke do |context|
        # Write your ruby code here. If there's a non-nil return value for the block that will be used as output/result value.
        # Otherwise we'll take what was piped to STDOUT
        
        # Content Assist is a little odd, it assumes the return value is a string that can be eval'd to an 
        # Array of strings or hashes that are the list of completion proposals.
        [${3:'example', 'values'}].inspect
      end
    end
  input: 
  - none
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - wi
  displayName: "With Defaults Block"
  expansion: |-
    with_defaults :${1:scope} => '${2:source.ruby}' do
      $0
    end
  input: 
  - none
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - env
  displayName: "Environment"
  expansion: |-
    env '${1:source.ruby}' do |e|
      e['${2:TM_COMMENT_START}'] = '${3:# }'
    end
  input: 
  - none
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - stp
  displayName: "Smart Typing Pairs Definition"
  expansion: smart_typing_pairs['${1:source.ruby}'] = ['${2:"}', '$2']
  input: 
  - none
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - ft
  displayName: "File Template"
  expansion: |-
    template '${1:name}' do |t|
      t.filetype = "*.${2:txt}"
      t.invoke do |context|
        raw_contents = IO.read("#{ENV['TM_BUNDLE_PATH']}/templates/${3:template.txt}")
        raw_contents.gsub(/\${([^}]*)}/) {|match| ENV[match[2..-2]] }
      end
    end
  input: 
  - none
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement 
  async: false
  customProperties: 
    prefix_values: 
    - pt
  displayName: "Project Template"
  expansion: |-
    project_template '${1:name}' do |t|
      t.type = :${2:name}
      t.location = '${3:relative_path_and_filename.zip}'
      t.description = '${4:description}'
      t.replace_parameters = false
    end
  input: 
  - none
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.ProjectTemplateElement 
  customProperties: 
    replace_parameters: true
  description: "A simple Ruble sample"
  displayName: "Ruble Template"
  id: "Ruble Template"
  location: templates/ruble_template.zip
  path: templates/template.rb
  tags: 
  - Ruby
  type: RUBY
copyright: (C) Copyright 2011 Appcelerator Inc. Distributed under the MIT license.
description: "A bundle to help develop your own bundles, grab 3rd-party bundles, convert TextMate bundles, and see scope/theme information."
displayName: "Bundle Development"
path: bundle.rb
repository: git://github.com/aptana/bundle-dev.ruble.git
visible: true
